
CREATE TABLE NHAN_VIEN (
  MA_NV      integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  TEN_NV     nvarchar(50) NOT NULL,
  TAI_KHOAN  varchar(50) NOT NULL,
  MAT_KHAU   nvarchar(50) NOT NULL,
  /* Keys */
  CONSTRAINT UNIQUE__TAI_KHOAN__QUAN_LY
    UNIQUE (TAI_KHOAN)
);

CREATE TABLE GIAO_VIEN (
  MA_GV       integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  TEN_GV      nvarchar(50) NOT NULL,
  NGAY_SINH   smallint NOT NULL DEFAULT 1,
  THANG_SINH  smallint NOT NULL DEFAULT 1,
  NAM_SINH    int NOT NULL DEFAULT 1975,
  GIOI_TINH   bit NOT NULL DEFAULT 0,
  EMAIL       varchar(50),
  SDT         bigint,
  DIA_CHI     nvarchar(500),
  /* Keys */
  CONSTRAINT UNIQUE__SDT__GIAO_VIEN
    UNIQUE (SDT), 
  CONSTRAINT UNIQUE__EMAIL__GIAO_VIEN
    UNIQUE (EMAIL),
  /* Checks */
  CONSTRAINT CHECK__NGAY_SINH__GIAO_VIEN
    CHECK (NGAY_SINH > 0 AND NGAY_SINH < 32), 
  CONSTRAINT CHECK__THANG_SINH__GIAO_VIEN
    CHECK (THANG_SINH > 0 AND THANG_SINH < 13), 
  CONSTRAINT CHECK__NAM_SINH__GIAO_VIEN
    CHECK (NAM_SINH > 1914), 
  CONSTRAINT CHECK__SDT__GIAO_VIEN
    CHECK (SDT > 0)
);

CREATE TABLE PHONG (
  MA_PHONG    integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  TEN_PHONG   nvarchar(50) NOT NULL,
  CHIEU_DAI   real NOT NULL,
  CHIEU_RONG  real NOT NULL,
  CHIEU_CAO   real NOT NULL,
  NGAY_LAP    smallint NOT NULL DEFAULT 1,
  THANG_LAP   smallint NOT NULL DEFAULT 1,
  NAM_LAP     int NOT NULL DEFAULT 2000,
  /* Keys */
  CONSTRAINT UNIQUE__TEN_PHONG__PHONG
    UNIQUE (TEN_PHONG),
  /* Checks */
  CONSTRAINT CHECK__CHIEU_DAI__PHONG
    CHECK (CHIEU_DAI > 0), 
  CONSTRAINT CHECK__CHIEU_RONG__PHONG
    CHECK (CHIEU_RONG > 0), 
  CONSTRAINT CHECK__CHIEU_CAO__PHONG
    CHECK (CHIEU_CAO > 0), 
  CONSTRAINT CHECK__NGAY_LAP__PHONG
    CHECK (NGAY_LAP > 0 AND NGAY_LAP < 32), 
  CONSTRAINT CHECK__THANG_LAP__PHONG
    CHECK (THANG_LAP > 0 AND THANG_LAP < 13), 
  CONSTRAINT CHECK__NAM_LAP__PHONG
    CHECK (NAM_LAP > 1975)
);

CREATE TABLE THIET_BI_LOAI (
  MA_LOAI_TB   integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  TEN_LOAI_TB  nvarchar(50) NOT NULL,
  /* Keys */
  CONSTRAINT UNIQUE__TEN_LOAI_TB__THIET_BI_LOAI
    UNIQUE (TEN_LOAI_TB)
);

CREATE TABLE THIET_BI (
  MA_TB       integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  TEN_TB      nvarchar(50) NOT NULL,
  MA_LOAI_TB  integer NOT NULL,
  MO_TA       text NOT NULL,
  SO_LUONG    integer not null DEFAULT 0,
  KHOA        bit DEFAULT 0,
  LY_DO_KHOA  nvarchar(500),
  /* Checks */
  CONSTRAINT CHECK__SO_LUONG__THIET_BI
    CHECK (SO_LUONG > 0),
  /* Foreign keys */
  CONSTRAINT FK__MA_LOAI_TB__THIET_BI
    FOREIGN KEY (MA_LOAI_TB)
    REFERENCES THIET_BI_LOAI(MA_LOAI_TB)
);

CREATE TABLE TIET_HOC (
  MA_TH       integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  TEN_TH      nvarchar(50) NOT NULL,
  GIO_BEGIN   smallint NOT NULL DEFAULT 1,
  PHUT_BEGIN  smallint NOT NULL DEFAULT 1,
  GIO_END     smallint NOT NULL DEFAULT 1,
  PHUT_END    smallint NOT NULL DEFAULT 30,
  /* Keys */
  CONSTRAINT UNIQUE__TEN_TH__TIET_HOC
    UNIQUE (TEN_TH),
  /* Checks */
  CONSTRAINT CHECK__GIO_BEGIN__TIET_HOC
    CHECK (GIO_BEGIN > -1 AND GIO_BEGIN < 24), 
  CONSTRAINT CHECK__PHUT_BEGIN__TIET_HOC
    CHECK (PHUT_BEGIN > -1 AND PHUT_BEGIN < 60), 
  CONSTRAINT CHECK__GIO_END__TIET_HOC
    CHECK (GIO_END > -1 AND GIO_END < 24), 
  CONSTRAINT CHECK__PHUT_END__TIET_HOC
    CHECK (PHUT_END > -1 AND PHUT_END < 60)
);

CREATE TRIGGER TRIG__CHECK_THOI_GIAN__TIET_HOC1
  AFTER INSERT
  ON TIET_HOC
  WHEN (new.gio_end < new.gio_begin)
BEGIN
  select raise(rollback,'REQUIRE -> GIO_END >= GIO_BEGIN');
END;

CREATE TRIGGER TRIG__CHECK_THOI_GIAN__TIET_HOC2
  AFTER UPDATE
  ON TIET_HOC
  WHEN (new.gio_end < new.gio_begin)
BEGIN
  select raise(rollback,'REQUIRE -> GIO_END >= GIO_BEGIN');
END;

CREATE TRIGGER TRIG__CHECK_THOI_GIAN__TIET_HOC3
  AFTER INSERT
  ON TIET_HOC
  WHEN (new.gio_end = new.gio_begin) and (new.phut_end <= new.phut_begin)
BEGIN
  select raise(rollback,'REQUIRE -> PHUT_END > PHUT_BEGIN');
END;

CREATE TRIGGER TRIG__CHECK_THOI_GIAN__TIET_HOC4
  AFTER UPDATE
  ON TIET_HOC
  WHEN (new.gio_end = new.gio_begin) and (new.phut_end <= new.phut_begin)
BEGIN
  select raise(rollback,'REQUIRE -> PHUT_END > PHUT_BEGIN');
END;

CREATE TABLE THIET_BI_SU_DUNG (
  MA_TBSD      integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  MA_PHONG     integer NOT NULL,
  MA_TB        integer NOT NULL,
  SO_LUONG_TB  integer NOT NULL DEFAULT 1,
  NGAY_SD      smallint NOT NULL DEFAULT 1,
  THANG_SD     smallint NOT NULL DEFAULT 1,
  NAM_SD       int NOT NULL DEFAULT 2000,
  /* Keys */
  CONSTRAINT UNIQUE__MA_PHONG_MA_TB__THIET_BI_SU_DUNG
    UNIQUE (MA_PHONG, MA_TB),
  /* Checks */
  CONSTRAINT CHECK__NGAY_SD__THIET_BI_SU_DUNG
    CHECK (NGAY_SD > 0 AND NGAY_SD < 32), 
  CONSTRAINT CHECK__THANG_SD__THIET_BI_SU_DUNG
    CHECK (THANG_SD > 0 AND THANG_SD < 13), 
  CONSTRAINT CHECK__NAM_SD__THIET_BI_SU_DUNG
    CHECK (NAM_SD > 1975), 
  CONSTRAINT CHECK__SO_LUONG_TB__THIET_BI_SU_DUNG
    CHECK (SO_LUONG_TB > 0),
  /* Foreign keys */
  CONSTRAINT FK__MA_TB__THIET_BI_SU_DUNG
    FOREIGN KEY (MA_TB)
    REFERENCES THIET_BI(MA_TB), 
  CONSTRAINT FK__MA_PHONG__THIET_BI_SU_DUNG
    FOREIGN KEY (MA_PHONG)
    REFERENCES PHONG(MA_PHONG)
);

CREATE TRIGGER TRIG__CHECK_SO_LUONG__THIET_BI_SU_DUNG_INSERT
  AFTER INSERT
  ON THIET_BI_SU_DUNG
  WHEN (select sum(so_luong_tb) from thiet_bi_su_dung where ma_tb = new.ma_tb) > (select so_luong from thiet_bi where ma_tb = new.ma_tb)
BEGIN
  select raise(rollback,'ERROR - SO LUONG YEU CAU > SO LUONG TRONG KHO');
END;

CREATE TRIGGER TRIG__CHECK_SO_LUONG__THIET_BI_SU_DUNG_UPDATE
  AFTER UPDATE
  ON THIET_BI_SU_DUNG
  WHEN (select sum(so_luong_tb) from thiet_bi_su_dung where ma_tb = new.ma_tb) > (select so_luong from thiet_bi where ma_tb = new.ma_tb)
BEGIN
  select raise(rollback,'ERROR - SO LUONG YEU CAU > SO LUONG TRONG KHO');
END;

CREATE TABLE DAT_PHONG (
  MA_DP     integer NOT NULL PRIMARY KEY AUTOINCREMENT,
  MA_GV     integer NOT NULL,
  MA_PHONG  integer NOT NULL,
  MA_TH     integer NOT NULL,
  NGAY_DP   smallint NOT NULL DEFAULT 1,
  THANG_DP  smallint NOT NULL DEFAULT 1,
  NAM_DP    int NOT NULL DEFAULT 2014,
  /* Keys */
  CONSTRAINT UNIQUE__PHONG_THOI_GIAN__DAT_PHONG
    UNIQUE (MA_PHONG, MA_TH, NGAY_DP, THANG_DP, NAM_DP),
  /* Checks */
  CONSTRAINT CHECK__NGAY_DP__DAT_PHONG
    CHECK (NGAY_DP > 0 AND NGAY_DP < 32), 
  CONSTRAINT CHECK__THANG_DP__DAT_PHONG
    CHECK (THANG_DP > 0 AND THANG_DP < 13), 
  CONSTRAINT CHECK__NAM_DP__DAT_PHONG
    CHECK (NAM_DP > 2013),
  /* Foreign keys */
  CONSTRAINT FK__MA_GV__DAT_PHONG
    FOREIGN KEY (MA_GV)
    REFERENCES GIAO_VIEN(MA_GV), 
  CONSTRAINT FK__MA_PHONG__DAT_PHONG
    FOREIGN KEY (MA_PHONG)
    REFERENCES PHONG(MA_PHONG), 
  CONSTRAINT FK__MA_TH__DAT_PHONG
    FOREIGN KEY (MA_TH)
    REFERENCES TIET_HOC(MA_TH)
);

INSERT INTO NHAN_VIEN (MA_NV, TEN_NV, TAI_KHOAN, MAT_KHAU) VALUES
(1, 'Mẫn', 'admin', '9999');

INSERT INTO THIET_BI_LOAI (MA_LOAI_TB, TEN_LOAI_TB) VALUES
(1, 'QUẠT TƯỜNG'),
(2, 'QUẠT TRẦN'),
(3, 'MÁY CHIẾU'),
(4, 'MÁY TÍNH DESKTOP'),
(5, 'LOA'),
(6, 'ỔN ÁP');

INSERT INTO THIET_BI (MA_TB, TEN_TB, MA_LOAI_TB, MO_TA, SO_LUONG, KHOA, LY_DO_KHOA) VALUES
(1, 'QUẠT TƯỜNG 2M', 1, 'QUẠT TƯỜNG CỦA CÔNG TY MANMAN89', 10, '0', NULL),
(2, 'QUẠT TRẦN 2M', 2, 'QUẠT TRẦN CỦA CÔNG TY MANMAN89', 11, '0', NULL),
(3, 'MÁY CHIẾU 2M', 3, 'MÁY CHIẾU CỦA CÔNG TY MANMAN89', 12, '0', NULL),
(4, 'MÁY TÍNH DESKTOP 2M', 4, 'MÁY TÍNH DESKTOP CỦA CÔNG TY MANMAN89', 13, '0', NULL),
(5, 'LOA 2M', 5, 'LOA CỦA CÔNG TY MANMAN89', 14, '0', NULL),
(6, 'ỔN ÁP 2M', 6, 'ỔN ÁP CỦA CÔNG TY MANMAN89', 15, '0', NULL);

INSERT INTO GIAO_VIEN (MA_GV, TEN_GV, NGAY_SINH, THANG_SINH, NAM_SINH, GIOI_TINH, EMAIL, SDT, DIA_CHI) VALUES
(1, 'Nguyễn Văn Mẫn', 12, 5, 1989, '0', 'vanmankey@gmail.com', 938848351, 'BÌNH DƯƠNG'),
(2, 'Vũ Thành Hưng', 9, 4, 1987, '0', 'thanhhung3020@yahoo.com.vn', 963230808, 'BÌNH DƯƠNG');

INSERT INTO PHONG (MA_PHONG, TEN_PHONG, CHIEU_DAI, CHIEU_RONG, CHIEU_CAO, NGAY_LAP, THANG_LAP, NAM_LAP) VALUES
(1, 'PHÒNG 1', 20, 10, 10, 5, 9, 2014),
(2, 'PHÒNG 2', 21, 11, 11, 6, 9, 2014),
(3, 'PHÒNG 3', 22, 12, 12, 7, 9, 2014);

INSERT INTO TIET_HOC (MA_TH, TEN_TH, GIO_BEGIN, PHUT_BEGIN, GIO_END, PHUT_END) VALUES
(1, 'TIẾT 1', 7, 15, 8, 0),
(2, 'TIẾT 2', 8, 5, 8, 50),
(3, 'TIẾT 3', 9, 5, 9, 50),
(4, 'TIẾT 4', 9, 55, 10, 40),
(5, 'TIẾT 5', 10, 45, 11, 30),
(6, 'TIẾT 6', 12, 45, 13, 30),
(7, 'TIẾT 7', 13, 35, 14, 20),
(8, 'TIẾT 8', 14, 25, 15, 10),
(9, 'TIẾT 9', 15, 25, 16, 10),
(10, 'TIẾT 10', 16, 15, 17, 0);

INSERT INTO THIET_BI_SU_DUNG (MA_TBSD, MA_PHONG, MA_TB, SO_LUONG_TB, NGAY_SD, THANG_SD, NAM_SD) VALUES
(1, 1, 1, 3, 5, 10, 2014),
(2, 2, 1, 3, 6, 10, 2014),
(3, 3, 1, 4, 7, 10, 2014),
(4, 1, 2, 3, 5, 10, 2014),
(5, 2, 2, 4, 6, 10, 2014),
(6, 3, 2, 4, 7, 10, 2014),
(7, 1, 3, 4, 5, 10, 2014),
(8, 2, 3, 4, 6, 10, 2014),
(9, 3, 3, 4, 7, 10, 2014),
(10, 1, 4, 4, 5, 10, 2014),
(11, 2, 4, 4, 6, 10, 2014),
(12, 3, 4, 5, 7, 10, 2014),
(13, 1, 5, 4, 5, 10, 2014),
(14, 2, 5, 5, 6, 10, 2014),
(15, 3, 5, 5, 7, 10, 2014),
(16, 1, 6, 5, 5, 10, 2014),
(17, 2, 6, 5, 6, 10, 2014),
(18, 3, 6, 5, 7, 10, 2014);

INSERT INTO DAT_PHONG (MA_DP, MA_GV, MA_PHONG, MA_TH, NGAY_DP, THANG_DP, NAM_DP) VALUES
(1, 1, 1, 1, 5, 11, 2014),
(2, 1, 1, 2, 6, 11, 2014),
(3, 1, 1, 3, 7, 11, 2014),
(4, 2, 2, 1, 5, 11, 2014),
(5, 2, 2, 2, 6, 11, 2014),
(6, 2, 2, 3, 7, 11, 2014),
(7, 1, 3, 1, 5, 11, 2014),
(8, 1, 3, 2, 6, 11, 2014),
(9, 1, 3, 3, 7, 11, 2014);






